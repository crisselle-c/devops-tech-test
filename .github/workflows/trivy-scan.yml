on:
  workflow_call:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_CI }}

      - name: Get ECR login
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          aws ecr get-login-password --region ${{ secrets.AWS_REGION_CI }} | \
            docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION_CI }}.amazonaws.com"

      - name: Set image name and tag
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          if [[ "$BRANCH_NAME" == "main" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${BRANCH_NAME//\//-}"
          fi
          IMAGE_NAME=$(echo "${{ github.repository }}" | awk -F/ '{print $2}' | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Pull and scan Docker image with Trivy
        working-directory: ${{ github.workspace }}
        run: |
          IMAGE_URI="$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION_CI }}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"
          echo "Scanning $IMAGE_URI"

          docker pull "$IMAGE_URI"

          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace aquasec/trivy:0.63.0 image --ignorefile .trivyignore --exit-code 1 --severity HIGH,CRITICAL "$IMAGE_URI"

      #Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}

