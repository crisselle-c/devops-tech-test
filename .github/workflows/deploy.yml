name: Deploy to Kubernetes

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION_CI:
        required: true
      AWS_SECRET_NAME:
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_CI }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Retrieve secrets from AWS Secrets Manager
        id: get-secrets
        run: |
          secret_json=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.AWS_SECRET_NAME }} --query SecretString --output text)
          echo "GOOGLE_KEY=$(echo "$secret_json" | jq -r '.google_key')" >> $GITHUB_OUTPUT
          echo "KUBE_CONFIG=$(echo "$secret_json" | jq -r '.kube_config')" >> $GITHUB_OUTPUT

      - name: Deploy to cluster
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG: ${{ steps.get-secrets.outputs.KUBE_CONFIG }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        with:
          args: |
            REPO_NAME=${GITHUB_REPOSITORY#*/} && \
            kubectl set image deployment/$REPO_NAME $REPO_NAME=$ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG

      - name: Create Kubernetes secret
        env:
          GOOGLE_KEY: ${{ steps.get-secrets.outputs.GOOGLE_KEY }}
        run: |
          kubectl create secret generic ${GITHUB_REPOSITORY#*/} \
            --from-literal=GOOGLE_KEY=$GOOGLE_KEY \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy using Kustomize
        run: |
          kubectl apply -k kustomize/overlays/production

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/${GITHUB_REPOSITORY#*/} -n default
